apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8shaslimits
  annotations:
    description: >-
      Requires containers to have memory and CPU limits set
spec:
  crd:
    spec:
      names:
        kind: K8sHasLimits
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8shaslimits

        import data.lib.exempt_container.is_exempt

        has_key(x, k) { _ = x[k] }

        violation[{"msg": msg}] {
          general_violation[{"msg": msg, "field": "containers"}]
        }

        general_violation[{"msg": msg, "field": field}] {
          container := input.review.object.spec[field][_]
          not has_key(container.resources, "limits")
          msg := sprintf("container <%v> has not limits set", [container.name])
        }



      libs:
        - |
          package lib.exempt_container

          is_exempt(container) {
              exempt_images := object.get(object.get(input, "parameters", {}), "exemptImages", [])
              img := container.image
              exemption := exempt_images[_]
              _matches_exemption(img, exemption)
          }

          _matches_exemption(img, exemption) {
              not endswith(exemption, "*")
              exemption == img
          }

          _matches_exemption(img, exemption) {
              endswith(exemption, "*")
              prefix := trim_suffix(exemption, "*")
              startswith(img, prefix)
          }
